version: '3.1'
services:
  nginx:
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - docker_net
    volumes:
      - conf:/etc/nginx/conf.d:ro
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - ./proxy/htpasswd:/etc/nginx/htpasswd
      - ./proxy/timeout.conf:/etc/nginx/conf.d/timeout.conf

  nginx-gen:
    image: jwilder/docker-gen
    container_name: nginx-gen
    restart: always
    networks:
      - docker_net
    depends_on:
      - nginx
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./proxy/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  frontend:
    build:
      context: .
      dockerfile: apps/mreza-mladih-platform/Dockerfile
    restart: always
    networks:
      - docker_net
    depends_on:
      - nginx
      - nginx-gen
      - mongodb
    environment:
      - NODE_ENV
      - VIRTUAL_HOST=${WEBSITE_HOSTNAME}
      - VIRTUAL_NETWORK=docker_net
      - LETSENCRYPT_HOST=${WEBSITE_HOSTNAME}
      - LETSENCRYPT_EMAIL=${OFFICE_EMAIL}
    volumes:
      - ../website/dist:/usr/share/nginx/html
      - ./docker/media:/usr/share/nginx/html/media

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    restart: always
    volumes:
      - ./docker/media:/home/app/service-gateway/media
    networks:
      - docker_net
    links:
      - mongodb
    depends_on:
      - nginx
      - nginx-gen
      - mongodb
    environment:
      - NODE_ENV
      - VIRTUAL_HOST=${API_HOSTNAME}
      - VIRTUAL_NETWORK=docker_net
      - LETSENCRYPT_HOST=${API_HOSTNAME}
      - LETSENCRYPT_EMAIL=${OFFICE_EMAIL}
      - GOOGLE_API_KEY
      - MAILGUN_APIKEY
      - MAILGUN_DOMAIN
      - HOSTNAME=${DEFAULT_HOSTNAME}

  mongodb:
    image: mongo:3.6.11
    container_name: mongodb
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - docker_net

  kue-ui:
    image: christophwitzko/kue-ui
    container_name: kueui
    restart: always
    networks:
      - docker_net
    links:
      - redisstore:redis
    depends_on:
      - redisstore
    environment:
      - VIRTUAL_HOST=${KUEUI_HOSTNAME}
      - VIRTUAL_NETWORK=docker_net
      - LETSENCRYPT_HOST=${KUEUI_HOSTNAME}
      - LETSENCRYPT_EMAIL=${OFFICE_EMAIL}

  mongodbadmin:
    image: mongo-express
    container_name: mongodbadmin
    restart: always
    networks:
      - docker_net
    links:
      - mongodb:mongo
    depends_on:
      - mongodb
    environment:
      - VIRTUAL_HOST=${MONGODB_HOSTNAME}
      - VIRTUAL_NETWORK=docker_net
      - LETSENCRYPT_HOST=${MONGODB_HOSTNAME}
      - LETSENCRYPT_EMAIL=${OFFICE_EMAIL}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGODB_USER}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGODB_PASS}

  database-service:
    build:
      context: .
      dockerfile: apps/database-service/Dockerfile
    container_name: database-service
    links:
      - mongodb
    depends_on:
      - mongodb
    networks:
      - docker_net
    environment:
      - NODE_ENV

  redisstore:
    image: redis
    container_name: redisstore
    restart: always
    networks:
      - docker_net

volumes:
  conf:
  vhost:
  html:
  certs:

networks:
  docker_net:
    driver: bridge
